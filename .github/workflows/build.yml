name: Build and Release

on:
  push:
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10" # Adjust based on your projectâ€™s requirements

      - name: Install PocketIC server
        uses: dfinity/pocketic@main
        with:
          pocket-ic-server-version: "9.0.0"

      - name: Create python environment and run tests and examples
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

          # Run tests
          python3 tests/pocket_ic_test.py
          # Ledger canister
          python3 examples/ledger_canister/ledger_canister_test.py
          # Counter canister
          python3 examples/counter_canister/counter_canister_test.py

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest

      - name: Install dependencies
        run: poetry install

      - name: Build distribution
        run: poetry build

      - if: matrix.os == 'ubuntu-latest'
        name: Upload wheel file
        uses: actions/upload-artifact@v4
        with:
          name: pocket_ic_${{ github.sha }}.whl
          path: dist/*.whl

      - if: matrix.os == 'ubuntu-latest'
        name: Upload sources
        uses: actions/upload-artifact@v4
        with:
          name: pocket_ic_${{ github.sha }}.tar.gz
          path: dist/*.tar.gz

  release:
    needs: build
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pocket_ic
    permissions: write-all

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: pocket_ic_${{ github.sha }}.whl

      - uses: actions/download-artifact@v4
        with:
          name: pocket_ic_${{ github.sha }}.tar.gz

      - name: Set tag
        id: set_tag
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Set whl artifact name
        id: set_name_whl
        run: echo "artifact_name=pocket_ic-${{ steps.set_tag.outputs.tag }}-py3-none-any.whl" >> $GITHUB_OUTPUT

      - name: Set whl artifact name
        id: set_name_tar
        run: echo "artifact_name=pocket_ic-${{ steps.set_tag.outputs.tag }}.tar.gz" >> $GITHUB_OUTPUT

      - name: move artifacs to dist
        run: |
          mkdir dist
          cp *.whl dist/
          cp *.tar.gz dist/

      - name: upload artifacts to release page
        uses: softprops/action-gh-release@master
        with:
          files: |
            ${{ steps.set_name_whl.outputs.artifact_name }}

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
